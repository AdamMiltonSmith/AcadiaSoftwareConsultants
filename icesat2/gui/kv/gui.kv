#:kivy 1.11.1
#:import Factory kivy.factory.Factory
#:import MeshLinePlot kivy.garden.graph.MeshLinePlot

ScreenManager:
    id: screen_manager
    #transition: FadeTransition()
    Main_Window:
        id: main
        name: 'main'
    Graph_Window:
        id: graph
        name: 'graph'
    Map_Window:
        id: map_layout
        name: 'map'

<CoordinatePopup>:
    id: coordpopup
    title: "Input coordinates"
    size: 500, 500
    size_hint: None, None
    auto_dismiss: False
    FloatLayout:
        id: popup_layout
        end_date_day_dd: end_date_day_dd.__self__
        end_date_month_dd: end_date_month_dd.__self__
        end_date_year_dd: end_date_year_dd.__self__
        start_date_day_dd: start_date_day_dd.__self__
        start_date_month_dd: start_date_month_dd.__self__
        start_date_year_dd: start_date_year_dd.__self__

        Label:
            text: "Minimum x (e/w) coordinate"
            size: 200, 50
            size_hint: None, None
            pos_hint: {"x": 0, "top": .9}
        CoordinateTextInput:
            id: topleft
            text: "Format xx.xx"
            multiline: False
            coord_dir: "-e/w"
            size: 100, 25
            size_hint: None, None
            pos_hint: {"x": .1, "top": .8}
            font_size: 11
            on_text_validate: self.on_enter()
            on_focus: self.check_text()
        Label:
            text: "Maximum x (e/w) coordinate"
            size: 200, 50
            size_hint: None, None
            pos_hint: {"x": .575, "top": .9}
        CoordinateTextInput:
            id: topright
            text: "Format xx.xx"
            multiline: False
            coord_dir: "+e/w"
            size: 100, 25
            size_hint: None, None
            pos_hint: {"x": .675, "top": .8}
            font_size: 11
            on_text_validate: self.on_enter()
        Label:
            text: "Minimum y (n/s) coordinate"
            size: 200, 50
            size_hint: None, None
            pos_hint: {"x": 0, "top": .7}
        CoordinateTextInput:
            id: bottomleft
            text: "Format xx.xx"
            multiline: False
            coord_dir: "-n/s"
            size: 100, 25
            size_hint: None, None
            pos_hint: {"x": .1, "top": .6}
            font_size: 11
            on_text_validate: self.on_enter()
        Label:
            text: "Maximum y (n/s) coordinate"
            size: 200, 50
            size_hint: None, None
            pos_hint: {"x": .575, "top": .7}
        CoordinateTextInput:
            id: bottomright
            text: "Format xx.xx"
            multiline: False
            coord_dir: "+n/s"
            size: 100, 25
            size_hint: None, None
            pos_hint: {"x": .675, "top": .6}
            font_size: 11
            on_text_validate: self.on_enter()

        Label:
            text: "Start date"
            size: 100, 50
            size_hint: None, None
            pos_hint: {"x": .125, "top": .475}

        Label:
            text: "End date"
            size: 100, 50
            size_hint: None, None
            pos_hint: {"x": .625, "top": .475}

        Label:
            text: "dd"
            size: 30, 30
            size_hint: None, None
            pos_hint: {"x": .075, "top": .365}
        Label:
            text: "mm"
            size: 30, 30
            size_hint: None, None
            pos_hint: {"x": .175, "top": .365}
        Label:
            text: "yyyy"
            size: 60, 30
            size_hint: None, None
            pos_hint: {"x": .275, "top": .365}
        Label:
            text: "dd"
            size: 30, 30
            size_hint: None, None
            pos_hint: {"x": .575, "top": .365}
        Label:
            text: "mm"
            size: 30, 30
            size_hint: None, None
            pos_hint: {"x": .675, "top": .365}
        Label:
            text: "yyyy"
            size: 60, 30
            size_hint: None, None
            pos_hint: {"x": .775, "top": .365}
        Label:
            text: "-"
            size: 10, 10
            size_hint: None, None
            pos_hint: {"x": .145, "top": .275}
        Label:
            text: "-"
            size: 10, 10
            size_hint: None, None
            pos_hint: {"x": .245, "top": .275}
        Label:
            text: "-"
            size: 10, 10
            size_hint: None, None
            pos_hint: {"x": .645, "top": .275}
        Label:
            text: "-"
            size: 10, 10
            size_hint: None, None
            pos_hint: {"x": .745, "top": .275}

        #start day
        DateChooseButton:
            id: start_date_day_button
            time_def: "start_day"
            text: "1"
            size_hint: None, None
            pos_hint: {"x": .075, "top": .3}
            font_size: 11
            on_parent: start_date_day_dd.dismiss()
            on_release:
                start_date_day_dd.create_buttons(start_date_month_button.text, \
                start_date_year_button.text)
            on_release: start_date_day_dd.open(self)
            size: 30, 30
            background_normal: ''
            background_color: start_date_day_button.back_color
            color: start_date_day_button.text_color
            font_size: start_date_day_button.font_size

        DayDD:
            id: start_date_day_dd
            auto_width: False
            width: 30
            parent_widget: start_date_day_button
            max_height: 100
            time_def: "start"
        #start month
        DateChooseButton:
            id: start_date_month_button
            time_def: "start_month"
            text: "1"
            size_hint: None, None
            pos_hint: {"x": .175, "top": .3}
            font_size: 11
            on_parent: start_date_month_dd.dismiss()
            on_release: #end_date_year_dd.create_buttons("year")
            on_release: start_date_month_dd.open(self)
            size: 30, 30
            background_normal: ''
            background_color: start_date_month_button.back_color
            color: start_date_month_button.text_color
            font_size: start_date_month_button.font_size

        MonthDD:
            id: start_date_month_dd
            auto_width: False
            width: 30
            parent_widget: start_date_month_button
            max_height: 100
            time_def: "start"
        #start year
        DateChooseButton:
            id: start_date_year_button
            time_def: "start_year"
            text: "2018"
            size_hint: None, None
            pos_hint: {"x": .275, "top": .3}
            font_size: 11
            on_parent: start_date_year_dd.dismiss()
            on_release: #end_date_year_dd.create_buttons("year")
            on_release: start_date_year_dd.open(self)
            size: 60, 30
            background_normal: ''
            background_color: start_date_year_button.back_color
            color: start_date_year_button.text_color
            font_size: start_date_year_button.font_size

        YearDD:
            id: start_date_year_dd
            auto_width: False
            width: 60
            parent_widget: start_date_year_button
            max_height: 100
            time_def: "start"
        #end day
        DateChooseButton:
            id: end_date_day_button
            time_def: "end_day"
            text: "1"
            size_hint: None, None
            pos_hint: {"x": .575, "top": .3}
            font_size: 11
            on_parent: end_date_day_dd.dismiss()
            on_release: end_date_day_dd.create_buttons(end_date_month_button.text, end_date_year_button.text)
            on_release: end_date_day_dd.open(self)
            size: 30, 30
            background_normal: ''
            background_color: end_date_day_button.back_color
            color: end_date_day_button.text_color
            font_size: end_date_day_button.font_size

        DayDD:
            id: end_date_day_dd
            auto_width: False
            width: 30
            parent_widget: end_date_day_button
            max_height: 100
        #end month
        DateChooseButton:
            id: end_date_month_button
            time_def: "end_month"
            text: "1"
            size_hint: None, None
            pos_hint: {"x": .675, "top": .3}
            font_size: 11
            on_parent: end_date_month_dd.dismiss()
            on_release: end_date_month_dd.open(self)
            size: 30, 30
            background_normal: ''
            background_color: end_date_month_button.back_color
            color: end_date_month_button.text_color
            font_size: end_date_month_button.font_size

        MonthDD:
            id: end_date_month_dd
            auto_width: False
            width: 30
            parent_widget: end_date_month_button
            max_height: 100
            time_def: "end"
        #end year
        DateChooseButton:
            id: end_date_year_button
            time_def: "end_year"
            text: "2020"
            size_hint: None, None
            pos_hint: {"x": .775, "top": .3}
            font_size: 11
            on_parent: end_date_year_dd.dismiss()
            on_release: #end_date_year_dd.create_buttons("year")
            on_release: end_date_year_dd.open(self)
            size: 60, 30
            background_normal: ''
            background_color: end_date_year_button.back_color
            color: end_date_year_button.text_color
            font_size: end_date_year_button.font_size

        YearDD:
            id: end_date_year_dd
            auto_width: False
            width: 60
            parent_widget: end_date_year_button
            max_height: 100
            time_def: "end"

        Button:
            text: "Cancel"
            size_hint: None, None
            size: 75, 40
            pos_hint: {"x": 0, "y": 0}
            on_release: coordpopup.dismiss()
        Button:
            text: "Confirm"
            size_hint: None, None
            size: 75, 40
            pos_hint: {"right": 1, "y": 0}
            on_release: root.check_input()
        ErrorDateLabel:
            id: error_label
            text: self.t
            size_hint: None, None
            size: 200, 50
            pos_hint: {"x": .3, "y": 0}

<ProjectSavePopup>:
    id: projectsavepopup
    title: "Save Project"
    size: 500, 400
    size_hint: None, None
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        Label:
            text: "Enter name of new project below"
        TextInput:
            id: text_input
            size_hint_y: None
            height: 30
            multiline: False
        BoxLayout:
            size_hint_y: None
            height: 30
            Button:
                text: "Cancel"
                on_release: projectsavepopup.dismiss()

            Button:
                text: "Save"
                on_release: root.save(text_input.text)
                on_release: projectsavepopup.dismiss()


<ImageSavePopup>:
    id: imagesavepopup
    title: "Save Image"
    size: 500, 400
    size_hint: None, None
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        FileChooserListView:
            id: filechooser
            on_selection: text_input.text = self.selection and self.selection[0] or ''

        TextInput:
            id: text_input
            size_hint_y: None
            height: 30
            multiline: False

        BoxLayout:
            size_hint_y: None
            height: 30
            Button:
                text: "Cancel"
                on_release: imagesavepopup.dismiss()

            Button:
                text: "Save"
                on_release: root.save(filechooser.path, text_input.text)
                on_release: imagesavepopup.dismiss()

<DeletePopup>:
    id: deletepopup
    title: "Delete current dataset"
    size: 600, 200
    size_hint: None, None
    BoxLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        Label:
            multiline: True
            text: """Are you sure you want to delete the current data set? \nThis cannot be undone."""
        BoxLayout:
            size_hint_y: None
            height: 30
            Button:
                text: "Cancel"
                on_release: deletepopup.dismiss()

            Button:
                text: "Delete"
                on_release: root.delete()
                on_release: deletepopup.dismiss()

<ErrorPopup>:
    id: errorpopup
    title: "Error"
    size: 500, 200
    size_hint: None, None
    error_message: self.error_message
    FloatLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        Label:
            height: 115
            size_hint_y: None
            pos_hint: {"x": 0, "top": 1}
            multiline: True
            halign: 'center'
            valign: 'middle'
            text: root.error_message
        Button:
            size: 60, 30
            size_hint_y: None
            pos_hint: {"right": 1, "y": 0}
            text: "Ok"
            on_release: errorpopup.dismiss()

<NotificationPopup>:
    id: notificationpopup
    title: "Error"
    size: 500, 200
    size_hint: None, None
    message: self.message
    FloatLayout:
        size: root.size
        pos: root.pos
        orientation: "vertical"
        Label:
            height: 115
            size_hint_y: None
            pos_hint: {"x": 0, "top": 1}
            multiline: True
            halign: 'center'
            valign: 'middle'
            text: root.message
        Button:
            size: 60, 30
            size_hint_y: None
            pos_hint: {"right": 1, "y": 0}
            text: "Ok"
            on_release: notificationpopup.dismiss()

<Main_Window>:
    name: 'main'
    BoxLayout:
        id: main_window_main_layout
        orientation: 'vertical'
        canvas.before:
            Color:
                rgba: .99,.99,.99,1
            Rectangle:
                pos: self.pos
                size: self.size
        GridLayout:
            id: main_window_top_bar
            rows: 1
            size_hint: 1, None
            height: 35
            pos_hint: {"x": 0, "top": 1}

            file_dropdown: file_dropdown.__self__
            edit_dropdown: edit_dropdown.__self__
            window_dropdown: window_dropdown.__self__
            map_dropdown: map_dropdown.__self__
            help_dropdown: help_dropdown.__self__

            canvas.before:
                Color:
                    rgba: 0.9, 0.9, 0.9, 1.0
                Rectangle:
                    pos: self.pos
                    size: self.size
            #file
            TopButton:
                id: file_btn
                text: 'File'
                on_parent: file_dropdown.dismiss()
                on_release: file_dropdown.open(self)
                pos_hint: {"x": 0, "top": 1}
                size_hint: None, None
                width: self.texture_size[0] + 2 * file_btn.side_width_buffer
                height: file_btn.btn_height
                background_normal: ''
                background_color: file_btn.back_color
                color: file_btn.text_color


            FileDropDown:
                id: file_dropdown
                auto_width: False
                width: 115

                TopButtonDropDownButton:
                    text: 'Save Project As'
                    size_hint_y: None
                    height: 30
                    on_release: file_dropdown.dismiss()
                    on_release: file_dropdown.project_save_check()

                TopButtonDropDownButton:
                    text: 'Save Image As'
                    size_hint_y: None
                    height: 30
                    on_release: file_dropdown.dismiss()
                    on_release: Factory.ImageSavePopup().open()

                TopButtonDropDownButton:
                    text: 'Import Data'
                    size_hint_y: None
                    height: 30
                    on_release: file_dropdown.dismiss()
                    on_release: Factory.CoordinatePopup().open()

                TopButtonDropDownButton:
                    text: 'Delete'
                    size_hint_y: None
                    height: 30
                    on_release: file_dropdown.dismiss()
                    on_release: file_dropdown.project_delete_check()
                    #Factory.DeletePopup().open()

            #edit
            TopButton:
                id: edit_btn
                text: 'Edit'
                on_parent: edit_dropdown.dismiss()
                on_release: edit_dropdown.open(self)
                pos_hint: {"x": 0, "top": 1}
                size_hint: None, None
                width: self.texture_size[0] + 2 * edit_btn.side_width_buffer
                height: edit_btn.btn_height
                background_normal: ''
                background_color: edit_btn.back_color
                color: edit_btn.text_color
                font_size: edit_btn.font_size

            EditDropDown:
                id: edit_dropdown
                auto_width: False
                width: 100

                TopButtonDropDownButton:
                    text: 'Preferences'
                    size_hint_y: None
                    height: 30
                    on_release: edit_dropdown.show_preferences
                    #edit_dropdown.select('preferences')

            #window
            TopButton:
                id: window_btn
                text: 'Window'
                on_parent: window_dropdown.dismiss()
                on_release: window_dropdown.open(self)
                pos_hint: {"x": 0, "top": 1}
                size_hint: None, None
                width: self.texture_size[0] + 2 * window_btn.side_width_buffer
                height: window_btn.btn_height
                background_normal: ''
                background_color: window_btn.back_color
                color: window_btn.text_color
                font_size: window_btn.font_size


            WindowDropDown:
                id: window_dropdown
                auto_width: False
                width: 90

                TopButtonDropDownButton:
                    text: 'Main View'
                    size_hint_y: None
                    height: 35
                    on_release: window_dropdown.select('reset')
                    on_release: root.manager.current = 'main'

                TopButtonDropDownButton:
                    text: 'Graph View'
                    size_hint_y: None
                    height: 35
                    on_release: window_dropdown.select('graph_view')
                    on_release: root.manager.current = 'graph'

                TopButtonDropDownButton:
                    text: 'Map View'
                    size_hint_y: None
                    height: 35
                    on_release: window_dropdown.select('map_view')
                    on_release: root.manager.current = 'map'

            #Map Button
            TopButton:
                id: map_btn
                text: 'Map'
                on_parent: map_dropdown.dismiss()
                on_release: map_dropdown.open(self)
                pos_hint: {"x": 0, "top": 1}
                size_hint: None, None
                width: self.texture_size[0] + 2 * map_btn.side_width_buffer
                height: map_btn.btn_height
                background_normal: ''
                background_color: map_btn.back_color
                color: map_btn.text_color
                font_size: map_btn.font_size

            MapDropDown:
                id: map_dropdown
                auto_width: False
                width: 140

                TopButtonDropDownButton:
                    text: 'Test'
                    size_hint_y: None
                    height: 35
                    on_release: map_dropdown.dismiss()
                    on_release: root.test_method()

            #help button
            TopButton:
                id: help_btn
                text: 'Help'
                on_parent: help_dropdown.dismiss()
                on_release: help_dropdown.open(self)
                pos_hint: {"x": 0, "top": 1}
                size_hint: None, None
                width: self.texture_size[0] + 2 * help_btn.side_width_buffer
                height: help_btn.btn_height
                background_normal: ''
                background_color: help_btn.back_color
                color: help_btn.text_color
                font_size: help_btn.font_size

            HelpDropDown:
                id: help_dropdown
                auto_width: False
                width: 100

                TopButtonDropDownButton:
                    text: 'Open manual'
                    size_hint_y: None
                    height: 35
                    on_release: help_dropdown.dismiss()
                    on_release: root.openManual()

        BoxLayout:
            id: main_window_bottom
            orientation: 'horizontal'
            BoxLayout:
                id: main_window_graph_layout
                orientation: 'vertical'

                WindowSplitter:
                    id: graph_splitter
                    sizable_from: 'bottom'
                    strip_size: graph_splitter.border_size
                    Graph_Widget:
                        id: main_window_graph_widget
                Map_Widget:
                    id: map_widget
                    allow_stretch: True
                    on_touch_down: self.on_touch_down(args[1])
                    on_touch_move: self.on_touch_move(args[1])
                    source: 'resources/map_images/ice_field_map3.TIF'
                    canvas:
                        Color:
                            rgba: 1, 0, 0, .5
                        Rectangle:
                            pos: self.rect_pos
                            size: self.rect_size
            WindowSplitter:
                id: scroll_splitter
                sizable_from: 'left'
                layout_content: layout_content
                strip_size: scroll_splitter.border_size
                BoxLayout:
                    id: bl
                    orientation: 'vertical'
                    padding: '125dp', 25
                    row_default_height: '48dp'
                    row_force_default: True
                    spacing: 0, 40
                    DataSetRefreshButton:
                        id: btn_refresh
                        container: layout_content
                        text: 'Refresh List'
                        size_hint: None, None
                        pos_hint: {'center_x': .5}
                        width: self.texture_size[0] + 2 * btn_refresh.side_width_buffer
                        height: btn_refresh.btn_height
                        background_normal: ''
                        background_color: btn_refresh.back_color
                        color: btn_refresh.text_color
                        font_size: btn_refresh.font_size
                        on_release:
                            self.remove_buttons()
                            self.add_buttons()

                    ScrollView:
                        size: root.size
                        GridLayout:
                            id: layout_content
                            size_hint_y: None
                            cols: 1
                            row_default_height: '40dp'
                            row_force_default: True
                            spacing: 0, 20
                            padding: 0, 40
                            height: self.minimum_height

<Graph_Window>:
    name: 'graph'
    BoxLayout:
        orientation: 'vertical'
        canvas.before:
            Color:
                rgba: .99,.99,.99,1
            Rectangle:
                pos: self.pos
                size: self.size
        GridLayout:
            id: main_window_top_bar
            rows: 1
            size_hint: 1, None
            height: 35
            pos_hint: {"x": 0, "top": 1}

            file_dropdown: file_dropdown.__self__
            edit_dropdown: edit_dropdown.__self__
            window_dropdown: window_dropdown.__self__
            map_dropdown: map_dropdown.__self__
            help_dropdown: help_dropdown.__self__

            canvas.before:
                Color:
                    rgba: 0.9, 0.9, 0.9, 1.0
                Rectangle:
                    pos: self.pos
                    size: self.size
            #file
            TopButton:
                id: file_btn
                text: 'File'
                on_parent: file_dropdown.dismiss()
                on_release: file_dropdown.open(self)
                pos_hint: {"x": 0, "top": 1}
                size_hint: None, None
                width: self.texture_size[0] + 2 * file_btn.side_width_buffer
                height: file_btn.btn_height
                background_normal: ''
                background_color: file_btn.back_color
                color: file_btn.text_color


            FileDropDown:
                id: file_dropdown
                auto_width: False
                width: 115

                TopButtonDropDownButton:
                    text: 'Save Project As'
                    size_hint_y: None
                    height: 30
                    on_release: file_dropdown.dismiss()
                    on_release: file_dropdown.project_save_check()

                TopButtonDropDownButton:
                    text: 'Save Image As'
                    size_hint_y: None
                    height: 30
                    on_release: file_dropdown.dismiss()
                    on_release: Factory.ImageSavePopup().open()

                TopButtonDropDownButton:
                    text: 'Import Data'
                    size_hint_y: None
                    height: 30
                    on_release: file_dropdown.dismiss()
                    on_release: Factory.CoordinatePopup().open()

                TopButtonDropDownButton:
                    text: 'Delete'
                    size_hint_y: None
                    height: 30
                    on_release: file_dropdown.dismiss()
                    on_release: file_dropdown.project_delete_check()

            # Edit Button
            TopButton:
                id: edit_btn
                text: 'Edit'
                on_parent: edit_dropdown.dismiss()
                on_release: edit_dropdown.open(self)
                pos_hint: {"x": 0, "top": 1}
                size_hint: None, None
                width: self.texture_size[0] + 2 * edit_btn.side_width_buffer
                height: edit_btn.btn_height
                background_normal: ''
                background_color: edit_btn.back_color
                color: edit_btn.text_color
                font_size: edit_btn.font_size

            EditDropDown:
                id: edit_dropdown
                auto_width: False
                width: 100

                TopButtonDropDownButton:
                    text: 'Preferences'
                    size_hint_y: None
                    height: 30
                    on_release: edit_dropdown.show_preferences

            # Window Button
            TopButton:
                id: window_btn
                text: 'Window'
                on_parent: window_dropdown.dismiss()
                on_release: window_dropdown.open(self)
                pos_hint: {"x": 0, "top": 1}
                size_hint: None, None
                width: self.texture_size[0] + 2 * window_btn.side_width_buffer
                height: window_btn.btn_height
                background_normal: ''
                background_color: window_btn.back_color
                color: window_btn.text_color
                font_size: window_btn.font_size


            WindowDropDown:
                id: window_dropdown
                auto_width: False
                width: 90

                TopButtonDropDownButton:
                    text: 'Main View'
                    size_hint_y: None
                    height: 35
                    on_release: window_dropdown.select('reset')
                    on_release: root.manager.current = 'main'

                TopButtonDropDownButton:
                    text: 'Graph View'
                    size_hint_y: None
                    height: 35
                    on_release: window_dropdown.select('graph_view')
                    on_release: root.manager.current = 'graph'

                TopButtonDropDownButton:
                    text: 'Map View'
                    size_hint_y: None
                    height: 35
                    on_release: window_dropdown.select('map_view')
                    on_release: root.manager.current = 'map'

            #Map Button
            TopButton:
                id: map_btn
                text: 'Map'
                on_parent: map_dropdown.dismiss()
                on_release: map_dropdown.open(self)
                pos_hint: {"x": 0, "top": 1}
                size_hint: None, None
                width: self.texture_size[0] + 2 * map_btn.side_width_buffer
                height: map_btn.btn_height
                background_normal: ''
                background_color: map_btn.back_color
                color: map_btn.text_color
                font_size: map_btn.font_size

            MapDropDown:
                id: map_dropdown
                auto_width: False
                width: 140

                TopButtonDropDownButton:
                    text: 'Placeholder'
                    size_hint_y: None
                    height: 35
                    on_release: map_dropdown.dismiss()
                    #on_release: Factory.CoordinatePopup().open()

            #help button
            TopButton:
                id: help_btn
                text: 'Help'
                on_parent: help_dropdown.dismiss()
                on_release: help_dropdown.open(self)
                pos_hint: {"x": 0, "top": 1}
                size_hint: None, None
                width: self.texture_size[0] + 2 * help_btn.side_width_buffer
                height: help_btn.btn_height
                background_normal: ''
                background_color: help_btn.back_color
                color: help_btn.text_color
                font_size: help_btn.font_size

            HelpDropDown:
                id: help_dropdown
                auto_width: False
                width: 100

                TopButtonDropDownButton:
                    text: 'Open manual'
                    size_hint_y: None
                    height: 35
                    on_release: help_dropdown.dismiss()
                    on_release: root.openManual()

        Graph_Widget:
            allow_stretch: True

<Map_Window>:
    name: 'map'
    id: map_window

    BoxLayout:
        id: map_layout
        orientation: 'vertical'
        canvas.before:
            Color:
                rgba: .99,.99,.99,1
            Rectangle:
                pos: self.pos
                size: self.size
        GridLayout:
            id: main_window_top_bar
            rows: 1
            size_hint: 1, None
            height: 35
            pos_hint: {"x": 0, "top": 1}

            file_dropdown: file_dropdown.__self__
            edit_dropdown: edit_dropdown.__self__
            window_dropdown: window_dropdown.__self__
            map_dropdown: map_dropdown.__self__
            help_dropdown: help_dropdown.__self__

            canvas.before:
                Color:
                    rgba: 0.9, 0.9, 0.9, 1.0
                Rectangle:
                    pos: self.pos
                    size: self.size
            #file
            TopButton:
                id: file_btn
                text: 'File'
                on_parent: file_dropdown.dismiss()
                on_release: file_dropdown.open(self)
                pos_hint: {"x": 0, "top": 1}
                size_hint: None, None
                width: self.texture_size[0] + 2 * file_btn.side_width_buffer
                height: file_btn.btn_height
                background_normal: ''
                background_color: file_btn.back_color
                color: file_btn.text_color


            FileDropDown:
                id: file_dropdown
                auto_width: False
                width: 115

                TopButtonDropDownButton:
                    text: 'Save Project As'
                    size_hint_y: None
                    height: 30
                    on_release: file_dropdown.dismiss()
                    on_release: file_dropdown.project_save_check()

                TopButtonDropDownButton:
                    text: 'Save Image As'
                    size_hint_y: None
                    height: 30
                    on_release: file_dropdown.dismiss()
                    on_release: Factory.ImageSavePopup().open()

                TopButtonDropDownButton:
                    text: 'Import Data'
                    size_hint_y: None
                    height: 30
                    on_release: file_dropdown.dismiss()
                    on_release: Factory.CoordinatePopup().open()

                TopButtonDropDownButton:
                    text: 'Delete'
                    size_hint_y: None
                    height: 30
                    on_release: file_dropdown.dismiss()
                    on_release: file_dropdown.project_delete_check()
                    #Factory.DeletePopup().open()

            #edit
            TopButton:
                id: edit_btn
                text: 'Edit'
                on_parent: edit_dropdown.dismiss()
                on_release: edit_dropdown.open(self)
                pos_hint: {"x": 0, "top": 1}
                size_hint: None, None
                width: self.texture_size[0] + 2 * edit_btn.side_width_buffer
                height: edit_btn.btn_height
                background_normal: ''
                background_color: edit_btn.back_color
                color: edit_btn.text_color
                font_size: edit_btn.font_size

            EditDropDown:
                id: edit_dropdown
                auto_width: False
                width: 100

                TopButtonDropDownButton:
                    text: 'Preferences'
                    size_hint_y: None
                    height: 30
                    on_release: edit_dropdown.show_preferences
                    #edit_dropdown.select('preferences')

            #window
            TopButton:
                id: window_btn
                text: 'Window'
                on_parent: window_dropdown.dismiss()
                on_release: window_dropdown.open(self)
                pos_hint: {"x": 0, "top": 1}
                size_hint: None, None
                width: self.texture_size[0] + 2 * window_btn.side_width_buffer
                height: window_btn.btn_height
                background_normal: ''
                background_color: window_btn.back_color
                color: window_btn.text_color
                font_size: window_btn.font_size


            WindowDropDown:
                id: window_dropdown
                auto_width: False
                width: 90

                TopButtonDropDownButton:
                    text: 'Main View'
                    size_hint_y: None
                    height: 35
                    on_release: window_dropdown.select('reset')
                    on_release: root.manager.current = 'main'

                TopButtonDropDownButton:
                    text: 'Graph View'
                    size_hint_y: None
                    height: 35
                    on_release: window_dropdown.select('graph_view')
                    on_release: root.manager.current = 'graph'

                TopButtonDropDownButton:
                    text: 'Map View'
                    size_hint_y: None
                    height: 35
                    on_release: window_dropdown.select('map_view')
                    on_release: root.manager.current = 'map'

            #Map Button
            TopButton:
                id: map_btn
                text: 'Map'
                on_parent: map_dropdown.dismiss()
                on_release: map_dropdown.open(self)
                pos_hint: {"x": 0, "top": 1}
                size_hint: None, None
                width: self.texture_size[0] + 2 * map_btn.side_width_buffer
                height: map_btn.btn_height
                background_normal: ''
                background_color: map_btn.back_color
                color: map_btn.text_color
                font_size: map_btn.font_size

            MapDropDown:
                id: map_dropdown
                auto_width: False
                width: 140

                TopButtonDropDownButton:
                    text: 'Test'
                    size_hint_y: None
                    height: 35
                    on_release: map_dropdown.dismiss()
                    on_release: root.test_method()

            #help button
            TopButton:
                id: help_btn
                text: 'Help'
                on_parent: help_dropdown.dismiss()
                on_release: help_dropdown.open(self)
                pos_hint: {"x": 0, "top": 1}
                size_hint: None, None
                width: self.texture_size[0] + 2 * help_btn.side_width_buffer
                height: help_btn.btn_height
                background_normal: ''
                background_color: help_btn.back_color
                color: help_btn.text_color
                font_size: help_btn.font_size

            HelpDropDown:
                id: help_dropdown
                auto_width: False
                width: 100

                TopButtonDropDownButton:
                    text: 'Open manual'
                    size_hint_y: None
                    height: 35
                    on_release: help_dropdown.dismiss()
                    on_release: root.openManual()
        Map_Widget:
            id: map_widget
            allow_stretch: True
            on_touch_down: self.on_touch_down(args[1])
            on_touch_move: self.on_touch_move(args[1])
            source: 'resources/map_images/ice_field_map3.TIF'
            canvas:
                Color:
                    rgba: 1, 0, 0, .5
                Rectangle:
                    pos: self.rect_pos
                    size: self.rect_size
        GridLayout:
            id: main_window_top_bar
            rows: 1
            size_hint: 1, None
            height: 35
            pos_hint: {"x": 0, "top": 1}
            color: 1,0,1,1
            padding: 0
            Label:
                id: min_x_label
                text: "Minimum X: null"
                color: 0,0,0,1
                background_color: 0,1,1,1
            Label:
                id: max_x_label
                text: "Maximum X: null"
                color: 0,0,0,1
            Label:
                id: min_y_label
                text: "Minimum Y: null"
                color: 0,0,0,1
            Label:
                id: max_y_label
                text: "Maximum Y: null"
                color: 0,0,0,1
            Button:
                text: "Update Coords"
                on_release: root.updateCoordsBox()
            # on_touch_down: root.on_touch_down(*args[1].pos)
            # on_touch_move: root.on_touch_move(*args[1].pos)
